<?xml version="1.0" encoding="utf-8"?>
<ClassDiagram MajorVersion="1" MinorVersion="1">
  <Class Name="Antlr4Ast.SyntaxNode" Collapsed="true">
    <Position X="5" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>ACAAAAAAAAAAAAAEAEAAAAAAAAAAAAAAAAAAAAIAACA=</HashCode>
      <FileName>SyntaxNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.AlternativeSyntax" Collapsed="true">
    <Position X="11.25" Y="2.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAACAAAAEAQAAAAAAQAAAAAAAAAAABAAAA=</HashCode>
      <FileName>AlternativeSyntax.cs</FileName>
    </TypeIdentifier>
    <ShowAsCollectionAssociation>
      <Property Name="Elements" />
    </ShowAsCollectionAssociation>
  </Class>
  <Class Name="Antlr4Ast.ElementSyntax" Collapsed="true">
    <Position X="13.75" Y="2.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAgAEAAAAAAAAAAAAAAAAAAAAAAAACAIAABAAAA=</HashCode>
      <FileName>ElementSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.SyntaxExtensions" Collapsed="true">
    <Position X="0.5" Y="5.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAACAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>SyntaxExtensions.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.OptionSyntax" Collapsed="true">
    <Position X="0.5" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAQAAAAAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>OptionSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.DotSyntax" Collapsed="true">
    <Position X="17.25" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DotSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.LiteralSyntax" Collapsed="true">
    <Position X="13" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAACAAAAAA=</HashCode>
      <FileName>LiteralSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.RuleRefSyntax" Collapsed="true">
    <Position X="15" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAQAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>RuleRefSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.Token" Collapsed="true">
    <Position X="16.25" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAQAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Token.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.AlternativeListSyntax" Collapsed="true">
    <Position X="11.25" Y="3.75" Width="1.5" />
    <AssociationLine Name="Items" Type="Antlr4Ast.AlternativeSyntax" FixedFromPoint="true">
      <Path>
        <Point X="11.625" Y="3.75" />
        <Point X="11.625" Y="2.941" />
      </Path>
    </AssociationLine>
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>AlternativeListSyntax.cs</FileName>
    </TypeIdentifier>
    <ShowAsCollectionAssociation>
      <Property Name="Items" />
    </ShowAsCollectionAssociation>
  </Class>
  <Class Name="Antlr4Ast.ChannelsSyntax" Collapsed="true">
    <Position X="3.25" Y="4.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAACAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ChannelsSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.ImportSyntax" Collapsed="true">
    <Position X="3.25" Y="2.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAgAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ImportSyntax.cs</FileName>
    </TypeIdentifier>
    <ShowAsCollectionAssociation>
      <Property Name="Names" />
    </ShowAsCollectionAssociation>
  </Class>
  <Class Name="Antlr4Ast.ImportNameSyntax" Collapsed="true">
    <Position X="0.5" Y="2.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAQAAAAAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>ImportNameSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.GrammarSyntax" Collapsed="true">
    <Position X="6" Y="2.25" Width="1.5" />
    <AssociationLine Name="Tokens" Type="Antlr4Ast.TokensSyntax" FixedFromPoint="true" FixedToPoint="true">
      <Path>
        <Point X="6.75" Y="2.941" />
        <Point X="6.75" Y="5.596" />
        <Point X="4.75" Y="5.596" />
      </Path>
    </AssociationLine>
    <AssociationLine Name="Channels" Type="Antlr4Ast.ChannelsSyntax" FixedFromPoint="true" FixedToPoint="true">
      <Path>
        <Point X="6.5" Y="2.941" />
        <Point X="6.5" Y="4.596" />
        <Point X="5.833" Y="4.596" Type="JumpStart" />
        <Point X="5.667" Y="4.596" Type="JumpEnd" />
        <Point X="4.75" Y="4.596" />
      </Path>
    </AssociationLine>
    <AssociationLine Name="ParserRules" Type="Antlr4Ast.RuleSyntax" FixedFromPoint="true" FixedToPoint="true">
      <Path>
        <Point X="7.25" Y="2.941" />
        <Point X="7.25" Y="3.875" />
        <Point X="8.5" Y="3.875" />
      </Path>
    </AssociationLine>
    <AssociationLine Name="LexerRules" Type="Antlr4Ast.RuleSyntax" FixedFromPoint="true" FixedToPoint="true">
      <Path>
        <Point X="7.5" Y="2.8" />
        <Point X="8.875" Y="2.8" />
        <Point X="8.875" Y="3.5" />
      </Path>
    </AssociationLine>
    <TypeIdentifier>
      <HashCode>AAAAAAEAAABAAAAAAFAEAAQAAAAAAABAAAAAAABBEAA=</HashCode>
      <FileName>GrammarSyntax.cs</FileName>
    </TypeIdentifier>
    <ShowAsCollectionAssociation>
      <Property Name="Options" />
      <Property Name="Imports" />
      <Property Name="Tokens" />
      <Property Name="Channels" />
      <Property Name="ParserRules" />
      <Property Name="LexerRules" />
    </ShowAsCollectionAssociation>
  </Class>
  <Class Name="Antlr4Ast.OptionsSyntax" Collapsed="true">
    <Position X="3.25" Y="3.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>OptionsSyntax.cs</FileName>
    </TypeIdentifier>
    <ShowAsCollectionAssociation>
      <Property Name="Items" />
    </ShowAsCollectionAssociation>
  </Class>
  <Class Name="Antlr4Ast.RuleSyntax" Collapsed="true">
    <Position X="8.5" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAACAAEAAAAQAAAAAAAAAAAAAABBAAAA=</HashCode>
      <FileName>RuleSyntax.cs</FileName>
    </TypeIdentifier>
    <ShowAsAssociation>
      <Property Name="AlternativeList" />
    </ShowAsAssociation>
  </Class>
  <Class Name="Antlr4Ast.TokensSyntax" Collapsed="true">
    <Position X="3.25" Y="5.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAACAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>TokensSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.CharacterRange" Collapsed="true">
    <Position X="14" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AgAAAAAAAAAAAAAAAEAAAAAAAAAIAAAAAAAAAAAAAAA=</HashCode>
      <FileName>CharacterRange.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.EmptySyntax" Collapsed="true">
    <Position X="18.25" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>EmptySyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Antlr4Ast.LexerBlockSyntax" Collapsed="true">
    <Position X="11.25" Y="4.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>LexerBlockSyntax.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Font Name="Segoe UI" Size="9" />
</ClassDiagram>